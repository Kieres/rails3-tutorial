#### {% title "Wyszukiwanie" %}

# Wyszukiwanie

SQL v. zewnętrzna wyszukiwarka + gem.


## Searchlogic

Zaczynamy od screencastu  
[Simple Search Form] [simple search railscasts] pokazującego 
jak zaimplementować proste wyszukiwanie.

My zaimplementujemy w *Fortunce* coś bardziej skomplikowanego
— tak jak w przykładzie ze screencastu [Searchlogic] [searchlogic-screencast].

### Instalacja gemu

Dopisujemy do *config/environment.rb*:

    :::ruby
    config.gem "searchlogic"  

i sprawdzamy na konsoli jak działa *Searchlogic*:

    :::ruby
    Fortune.author_like('Einstein')
    Fortune.author_not_like('Einstein')
    Fortune.author_like('Einstein').quotation_like('God') # AND
    Fortune.quotation_like_any(['God', 'never']) # OR
    Fortune.quotation_like_all(['God', 'Before']) # AND
    User.roles_name_like('admin')
    User.roles_name_like('owner')

Można wyszukiwać też tak:

    :::ruby
    Fortune.search(:author_like => 'Einstein') # Search object
    Fortune.search(:author_like => 'Einstein').all
    Fortune.search(:author_like => 'Einstein', :quotation_like => 'God').all
    s = Fortune.search(:author_like => 'Einstein')
    s.quotation_like('God').all # composition

Inne rzeczy, nie będące wyszukiwaniem:

    :::ruby
    Fortune.ascend_by_author


### Proste wyszukiwanie po autorach

Zauważmy, że *to_s* poniżej „daje opcjonalny *author\_like\_any*”:

    :::ruby
    @fortunes = Fortune.author_like_any(params[:search].to_s.split)

Ponieważ

    :::ruby
    nil.to_s # => ""
    nil.to_s.split # => []

Zatem, jeśli nic nie wpisano, czyli *params[:search] = nil*, 
to zdefiniowana powyżej tablica *@fortunes* równa się tablicy

    :::ruby
    Fortune.all

Kontroler:

    :::ruby
    class FortunesController < ApplicationController
      def index
        @main = Fortune.author_like_any(params[:search].to_s.split).
          paginate(:page => params[:page], :order => 'created_at DESC')
      end
    end

Formularz:

    :::html
    <h3>Search by author</h3>
    <%- form_tag root_path, :method => 'get' do -%>
      <p>
        <%= text_field_tag 'search', params[:search] %>
        <%= submit_tag "Submit", :name => nil %>
        </p>
    <%- end -%>


## Wyszukiwanie po fortunkach

Zaawansowane wyszukiwanie, tj. wyszukiwanie po cytatach i po autorach.



## Luźne rzeczy

Przykład aplikacji napisanej przez autora *Searchlogic*
Bena Johnsona (nieaktualne, z 2008):
[Rails app using the searchlogic library] [searchlogic-example].


## Sphinx

Gem *Thinking Sphinx*.


## Xapian

Gem *Xapit*.


#### Links

[searchlogic]: http://github.com/binarylogic/searchlogic/ "Searchlogic"
[searchlogic-example]: http://github.com/binarylogic/searchlogic_example/ "Searchlogic Rails example"
[searchlogic-screencast]: http://railscasts.com/episodes/176-searchlogic "Searchlogic screencast"
[simple search railscasts]: http://railscasts.com/episodes/37-simple-search-form "Simple Search Form"
